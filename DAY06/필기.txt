평일 java2

Zoom 회의 참가
https://us06web.zoom.us/j/9742331340?pwd=Vk54K0Q0QnNOSEZFbHRCNUNBQzBRQT09

회의 ID: 974 233 1340
암호: 1900c
--------------------------------------------------------------------
1. Package
  1-1. 패키지에 속해 있는 클래스에 대한 객체 생성
   - 다른 패키지의 클래스를 사용하고자 할 경우, 패키지 이름을 포함한
   FullName으로 사용해야 한다.
   - 이러한 번거로움을 피하고자 클래스 정의 전에 import 구문을 사용하여
   특정 클래스의 이름이 어떤 패키지에 소속되어 있는지를 명시할 수 있다.

2. ClassPath
  2-1. ClassPath란?
   - 컴파일이 완료된 *.class 파일들이 위치하는 경로
   - 즉 객체를 생성할 때 대상 클래스의 소스 없이도 컴파일된 결과물만 참조하여
   객체 생성 및 메서드 호출 등이 가능해진다.

3. Library
  3-1. Library란
   - 한 개 이상의 패키지들을 배포하기 용이하도록 압축한 형태
   - 다른 프로그램에서 라이브러리 안에 포함된 기능을 활용할 수 있다.

  3-2. JAVA 기본 API들
   - 우리가 사용하는 JDK안에는 이미 수많은 라이브러리가 포함되어 있고,
   이 라이브러리 안에는 프로그램 개발에 필요한 패키지들이 기본적으로 포함되어 있다.
   - 자바 프로그래밍은 이러한 라이브러리들의 기능을 활용하여 이루어 진다.
   - 이렇게 프로그램 개발을 위하여 기본적으로 제공되는 기능들을 API라 한다.


* jar
 - lib 확장자명

* war
 - 프로젝트 export의 한 형태

4. Wrapper Class 
 4-1. Wrapper Class
  - Java는 데이터를 관리하기 위하여 기본 데이터 타입을 지원하지만,
  클래스를 통해서 만들어진 객체를 통한 데이터 관리도 가능하다.
  - 기본 데이터 타입의 변수를 객체형태로 사용해야 하는 경우가 있는데,
  이때 기본형 타입을 객체로 포장할 필요가 있다.
  - 포장 클래스(Wrapper Class)는 특정 기본형 타입을 나타내는 용도로 사용된다.

  4-2. Wrapper클래스의 의미
   - 초창기 Java언어는 기본 자료형이 연산보다도 Wrapper클래스를 사용한
   연산이 더 많이 이루어 졌으나, Java언어가 발전함에 따라서 기본 자료형과
   Wrapper 클래스 간의 연산에 차이가 없어졌다.
   - 최근에 Java언어는 Wrapper 클래스와 기본 자료형을 구분하지 않고 사용하기
   때문에 객체로서의 특별한 의미가 없어졌다고 볼 수 있다.

  4-3. Wrapper 클래스의 객체 만들기
   - 각각의 wrapper 클래스의 객체는 자신과 대응되는 기본 자료형의 데이터를
   파라미터로 전달받는다.

	int num = 1;
	Integer wrapper = new Integer( num );

  4-4. Wrapper 클래스 형변환
   - 기본 자료형과 Wrapper 클래스 간에는 서로 암묵적 형변환이 가능하다.

	int num = 100;
	Integer wrapper = num;
	------------------------------------------------
	Integer wrapper = new Integer(100);
	int num = wrapper;
   
  4-5. Wrapper 클래스의 static 데이터
   - 모든 Wrapper 클래스는 static 데이터 형태로 Wrapper 클래스에 대응되는
   자료형에 대한 최소값과 최대값을 가지고 있다.

	int max = Integer.MAX_VALUE;
	int min = Integer.MIN_VALUE;

  4-6. 문자열 데이터의 형변환
   - 1과 "1"의 차이
	-> 기본 자료형과 문자열 데이터간의 연산에서는 기본 자료형 데이터가
	문자열로 변환된 후, 문자열간의 연산으로 처리된다.

	int a = 1;
	String b = "1";
	System.out.println( a + b);	// "11"이 출력된다.

   -  사용자 입력값에 대한 연산
	-> 모든 프로그램 플랫폼에서 사용자의 입력값을 String 으로 처리된다.

	String money1 = "5000";
	String money2 = "3000";
	String total = moeny1 + moeny2;	// 50003000

   - 문자열 데이터를 기본 데이터형으로 변환하기
	-> Wrapper 클래스에는 기본 자료형의 모양을 띄고 있는 문자열 데이터를
	실제 기본 자료형으로 변환시키는 기능이 포함되어 있다.
	-> 오늘날의 java에서 Wrapper 클래스의 가장 큰 의미는 바로 이부분이다.

	String money1 = "5000";
	String moeny2 = "3000";
	
	int m1 = Integer.parseInt( money1 );
	int m2 = Integer.parseInt( money2 );

	System.out.println( m1 + m2 );	// 8000




















