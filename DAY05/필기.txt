평일 java2

Zoom 회의 참가
https://us06web.zoom.us/j/9742331340?pwd=Vk54K0Q0QnNOSEZFbHRCNUNBQzBRQT09

회의 ID: 974 233 1340
암호: 1900c
-------------------------------------------------------------
1. Static

	// 하나의 게시물을 표현하기 위한 클래스
	public class Article {
		private static int count;	// 전체 글 수
		private static String category;// 카테고리		

		private int num;	// 글 번호
		private String title;	// 제목
		private String regDate;	// 날짜	
	}

   - 멤버변수는 모든 객체가 독립적으로 갖는 고유 데이터이기 때문에
   게시물의 수라는 공유 데이터를 모든 게시물이 갖게된다.
   - 즉, 각각의 객체가 중복된 데이터를 갖게 된다.
   - 클래스를 설계할 때, 멤버변수 중 모든 객체에서 공통적으로 사용해야
   하는 값에 static을 붙인다.(객체간의 공유 자원을 표현하는 static 키워드)
   - static이 붙은 멤버변수는 객체의 개수에 상관 없이 단 하나만 생성되며,
   이를 모든 객체가 공유하기 때문에 메모리를 효율적으로 사용할 수 있다.

  1-1. 컴퓨터의 메모리 구조
   - 코드영역(고정영역)
	-> 프로그램의 코드가 저장되는 영역.
	이 영역에 저장된 명령어들을 cpu가 하나씩 가져가 실행한다.
   
   - 데이터 영역(고정영역)
	-> 전역변수와 static으로 선언되는 변수가 할당된다.
	이 영역에 할당되는 변수들은 프로그램 시작과 동시에 메모리 공간이
	할당되어 종료될 때 까지 남아있게 된다.

   - 힙 영역(동적영역)
	-> 프로그래머가 원하는 시점에 변수를 할당하고, 소멸시키는 영역
	메모리 동적 할당시 사용된다. 객체가 생성되는 영역이다.
   
   - 스택 영역(동적영역)
	-> 함수가 실행될 때 사용되는 파라미터와 지역변수에 대한 메모리 공간.
	함수의 종료와 함께 소멸된다.

  1-2. 하나의 프로그램이 사용하는 메모리의 영역
   - 고정영역
	-> 프로그램이 실행되면 실행파일이 메모리에 로드되면서, 실행파일의
	용량만큼 RAM을 사용한다.
	-> 실행 파일의 크기는 변할 수 없으므로 이 영역의 크기는 고정크기를
	갖는다.

   - 동적영역
	-> 프로그래머가 new 키워드를 사용해서 객체나 배열을 생성하면 사용된다.
	(힙 영역)
	-> 또 다른 경우는 메서드가 호출되는 동안 사용될 파라미터와 지역변수가
	생성된다.(스택 영역)
	-> 메서드가 종료되나 객체가 더이상 사용되지 않으면 생성된 변수나
	객체는 메모리에서 사라지므로, 이 영역은 유동적인 크기를
	갖게 된다.

   1-3. static 데이터의 생성 위치
	-> static 데이터는 메모리의 고정영역중 데이터영역에 생성되고,
	일반 멤버변수나 객체는 동적영역 중  heap 메모리 영역에 생성된다.

   1-4. 프로그램이 메모리를 사용하는 순서
    - 최초 실행시 고정 영역에 실행파일만큼의 메모리를 점유한다.
    - 프로그램이 각종 동작을 수행하는 동안 동적영역을 사용한다.

   1-5. 멤버변수와 static 멤버변수의 차이
    - static 변수는 프로그램의 실행과 동시에 객체의 생성 여부와 상관 없이,
    이미 존재하기 때문에 소스 코드에서는 특정 클래스 안에서 명시하지만,
    그 클래스를 통해서 생성되는 객체나 그 안에 포함되는 멤버변수와는 
    다른 존재이다.
    - 객체가 생성되지 않았더라도 이미 존재하고 있기 때문에 static 변수는
    객체의 이름을 통해 접근하는 것이 아니라, 클래스의 이름을 통해서
    접근해야 한다.
    - 단, static 변수가 선언된 클래스 안에서는 변수 이름으로 직접 접근이
    허용된다.

	// Article 클래스 및 다른 클래스에서 접근하는 경우
	Article.count = 3;
	Article.category = "공지사항";

	// Article 클래스에서 접근하는 경우
	count = 3;
	category = "공지사항";

  1-6. static 데이터에 접근하기 위한 메서드
   - 클래스에서 정의하는 일반 메서드들은 객체의 생성과 동시에 동적 메모리
   영역에 활성화 된다.
	-> 동적 메모리 영역의 입장에서는 고정 메모리 영역의 자원들은
	항상 존재한다.
	-> 고정 메모리 영역의 자원들은 동적 메모리의 자원들이 항상
	존재하는 것이라는 보장을 받지 못한다.
   - 그러므로 객체의 생성과 상관 없이 static 변수에 접근하기 위한
   메서드를 만들 필요가 있는데, 메서드들의 정의 과정에서 static 키워드를 
   사용하면 static 자원에 접근하기 위한 메서드를 만들 수 있다.

  1-7. static 메서드 사용시의 제약사항
   - 메모리 영역의 차이 때문에 static 메서드는 동적 메모리 영역의 멤버변수를
   사용하거나, static이 아닌 일반 함수를 호출할 수 없다.

   - 고정 영역
	-> 동적 메모리 영역의 자원들은 항상 존재하는 것이 아니기 때문에
	static 멤버함수는 동적 메모리 영역의 멤버변수를 사용하거나,
	static이 아닌 일반 멤버함수를 호출할 수 없다.

   - 동적 영역
	-> static 자원은 항상 존재하는 것이므로 동적 영역에서는
	static 변수를 활용하거나, static 멤버함수를 호출할 수 있다.

2. 패키지(Package)
  2-1. Java Package
   - 패키지 -> 클래스에 대한 묶음 단위
   - 클래스를 용도별이나, 기능별로 그룹화 한 것을 말한다.
   소스코드는 폴더로 분류된 형태로 존재하게 된다.
   - 서로 다른 패키지에 속해 있다면 다른 클래스와 이름이 동일하더라도
   충돌이 발생하지 않는다.
   (서로 다른 폴더에는 이름이 같은 파일들이 존재할 수 있다.)

  2-2. 패키지 추가하기
   - 패키지 이름의 일반적인 정의 형식
	-> 회사 도메인이름의 역순, 프로젝트이름의 소문자
	ex) kr.co.itpaper.myapp

  2-3. 패키지 소속 선언
   - 패키지에 소속된 클래스 파일은 첫 번째 라인에서 자신이 소속된 클래스 
   패키지 이름을 선언해야 한다.
   - 이클립스가 소스를 분류하는 작업을 통해 구문을 자동으로 추가해 주지만,
   간혹 처리되지 않을 때도 있으므로 package 구문에서 에러가 발생하는 경우,
   소스가 어떤 패키지에 있는지 확인하여 직접 이 구문을 수정해 주어야 한다.














** 문제은행
http://jungol.co.kr/ 
[language coder] https://codeup.kr/ 
https://www.acmicpc.net/ 
https://programmers.co.kr/ 
https://www.oncoder.com/ 
https://leetcode.com/ 
https://www.codility.com/ 
https://www.hackerrank.com/ 
https://www.sololearn.com
