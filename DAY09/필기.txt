java2 평일

Zoom 회의 참가
https://us06web.zoom.us/j/9742331340?pwd=Vk54K0Q0QnNOSEZFbHRCNUNBQzBRQT09

회의 ID: 974 233 1340
암호: 1900c

------------------------------------------------------------
1. 디자인 패턴이란?
  1-1. 많은 실무 프로그래머들이 인정한 효율적인 코딩 방법 또는 구조
  1-2. SingleTone 디자인 패턴
   - 프로그램 내의 여러 곳에서 반복적으로 사용되어야 하는 객체에 대해
   전역적인 범위를 갖도록 객체를 생성하고, 이 객체를 여러 곳에서 공유하기 위한
   클래스 작성 패턴.
   - 이러한 패턴을 통해 생성된 객체를 싱글톤 객체라고 한다.
  1-3. SingleTone 객체의 이점
   - 프로그램의 전역에서 활용할 재료로 사용되는 공유 기능을 하나만 생성하여
   여러 곳에서 재사용함으로 해서 메모리를 효율적으로 사용할 수 있다.
   - 단 한번만 객체를 생성하면 다시 객체를 생성할 필요가 없기 때문에,
   해당 기능을 사용할 때마다 객체를 일일이 생성해야 하는 번거로움을 피할 수 있다.

2. 컬렉션 프레임워크(Collection Framework)소개
 2-1. Collection Framework란?
  - 다수의 데이터를 쉽게 처리할 수 있는 표준화 된 방법을 제공하는 클래스들로,
  기존 배열형태의 자료 저장에서 좀더 다양한 데이터들을 저장하기 위한 필수
  클래스이다.

  2-2. HashMap 클래스
   - HashMap 클래스는 Map 인터페이스를 상속받은 '자료보관소' 이다.
   - 선언과 할당시에 HashMap의 이름표로 사용할 데이터형(String)과
   HashMap에 저장할 데이터형을 클래스의 이름으로 명시해야 하는데,
   이를 '제너릭스'라 한다.
   - 제너릭스에 명시할 수 있는 데이터형은 반드시 클래스 이름이여야 하기 때문에
   기본 자료형을 보관할 경우 Wrapper클래스의 이름을 사용한다.

	 HashMap<String, Integer> data
		= new HashMap<String, Integer>();
   - 기존에 저장된 데이터와 중복되는 이름(키값)이 저장될 경우,
   기존에 저장된 데이터를 덮어 씌우게 된다.
















